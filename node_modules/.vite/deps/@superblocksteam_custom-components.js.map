{
  "version": 3,
  "sources": ["../../@superblocksteam/custom-components/dist/hooksPlumbing.js", "../../@superblocksteam/custom-components/dist/useSuperblocksContext.js", "../../@superblocksteam/custom-components/dist/useSuperblocksIsLoading.js", "../../@superblocksteam/custom-components/dist/useSuperblocksWidgetSize.js"],
  "sourcesContent": ["// This files contains the basic plumbing that is needed to implement all hooks that are used by custom components.\n// The place where we store the `CCReactInfo` object\nconst ccReactInfoRegister = globalThis.__cc_react_info;\n/**\n * A React hook that is used internally by all superblocks hooks for custom components.\n * @returns The React library namespace object used by custom components and the CCRenderingContext object provided by the UI\n */\nexport function useHooksInternalContext() {\n    if (ccReactInfoRegister === undefined) {\n        throw new Error(\"Cannot find the context object provided by the Superblocks Application Builder UI\");\n    }\n    if (ccReactInfoRegister.current === undefined) {\n        throw new Error(\"No custom components have been registered, are you using the hook in the right place?\");\n    }\n    const { React, SuperblocksCCReactContext } = ccReactInfoRegister.current;\n    const ccRenderingContext = React.useContext(SuperblocksCCReactContext);\n    if (ccRenderingContext === undefined) {\n        throw new Error(\"No React context found, are you using the hook in the right place?\");\n    }\n    return {\n        React,\n        ccRenderingContext,\n    };\n}\n", "import { useHooksInternalContext } from \"./hooksPlumbing\";\n/**\n * A React hook that can be used to get the Superblocks context object that contains methods that enable custom components\n * to interact with the Superblocks Application.\n * @returns The Superblocks context object\n */\nexport function useSuperblocksContext() {\n    const { ccRenderingContext } = useHooksInternalContext();\n    return ccRenderingContext.superblocksContext;\n}\n", "import { useHooksInternalContext } from \"./hooksPlumbing\";\n/**\n * A React hook that returns a boolean that indicates whether the current custom component depends on any data that is\n * currently being loaded. This can be used to show a loading indicator in your custom component.\n */\nexport function useSuperblocksIsLoading() {\n    const { React, ccRenderingContext } = useHooksInternalContext();\n    const [isLoading, setIsLoading] = React.useState(ccRenderingContext.isLoadingRef.current);\n    // we need to subscribe to changes immediately, so use `useLayoutEffect` to subscribe right after the render phase is finished\n    React.useLayoutEffect(() => {\n        ccRenderingContext.isLoadingSubscribers.add(setIsLoading);\n        return () => {\n            ccRenderingContext.isLoadingSubscribers.delete(setIsLoading);\n        };\n    }, []);\n    return isLoading;\n}\n", "import { useHooksInternalContext } from \"./hooksPlumbing\";\n/**\n * A React hook that returns the size of the area that is available for the custom component to render in. Calling this\n * hook will cause your custom component to be re-rendered whenever that size changes.\n */\nexport function useSuperblocksWidgetSize() {\n    const { React, ccRenderingContext } = useHooksInternalContext();\n    const [widgetSize, setWidgetSize] = React.useState(ccRenderingContext.widgetSizeRef.current);\n    // we need to subscribe to changes immediately, so use `useLayoutEffect` to subscribe right after the render phase is finished\n    React.useLayoutEffect(() => {\n        ccRenderingContext.widgetSizeSubscribers.add(setWidgetSize);\n        return () => {\n            ccRenderingContext.widgetSizeSubscribers.delete(setWidgetSize);\n        };\n    }, []);\n    return widgetSize;\n}\n"],
  "mappings": ";;;AAEA,IAAM,sBAAsB,WAAW;AAKhC,SAAS,0BAA0B;AACtC,MAAI,wBAAwB,QAAW;AACnC,UAAM,IAAI,MAAM,mFAAmF;AAAA,EACvG;AACA,MAAI,oBAAoB,YAAY,QAAW;AAC3C,UAAM,IAAI,MAAM,uFAAuF;AAAA,EAC3G;AACA,QAAM,EAAE,OAAO,0BAA0B,IAAI,oBAAoB;AACjE,QAAM,qBAAqB,MAAM,WAAW,yBAAyB;AACrE,MAAI,uBAAuB,QAAW;AAClC,UAAM,IAAI,MAAM,oEAAoE;AAAA,EACxF;AACA,SAAO;AAAA,IACH;AAAA,IACA;AAAA,EACJ;AACJ;;;ACjBO,SAAS,wBAAwB;AACpC,QAAM,EAAE,mBAAmB,IAAI,wBAAwB;AACvD,SAAO,mBAAmB;AAC9B;;;ACJO,SAAS,0BAA0B;AACtC,QAAM,EAAE,OAAO,mBAAmB,IAAI,wBAAwB;AAC9D,QAAM,CAAC,WAAW,YAAY,IAAI,MAAM,SAAS,mBAAmB,aAAa,OAAO;AAExF,QAAM,gBAAgB,MAAM;AACxB,uBAAmB,qBAAqB,IAAI,YAAY;AACxD,WAAO,MAAM;AACT,yBAAmB,qBAAqB,OAAO,YAAY;AAAA,IAC/D;AAAA,EACJ,GAAG,CAAC,CAAC;AACL,SAAO;AACX;;;ACXO,SAAS,2BAA2B;AACvC,QAAM,EAAE,OAAO,mBAAmB,IAAI,wBAAwB;AAC9D,QAAM,CAAC,YAAY,aAAa,IAAI,MAAM,SAAS,mBAAmB,cAAc,OAAO;AAE3F,QAAM,gBAAgB,MAAM;AACxB,uBAAmB,sBAAsB,IAAI,aAAa;AAC1D,WAAO,MAAM;AACT,yBAAmB,sBAAsB,OAAO,aAAa;AAAA,IACjE;AAAA,EACJ,GAAG,CAAC,CAAC;AACL,SAAO;AACX;",
  "names": []
}
