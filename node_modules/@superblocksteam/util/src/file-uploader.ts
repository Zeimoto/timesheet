import { isEmpty } from "lodash";

export const COMPONENT_EVENT_HEADER = "x-superblocks-component-event";

// retrieves bucketeer base URL given the superblocks server base URL
export const getBucketeerUrlFromSuperblocksUrl = (
  superblocksBaseUrl: string
): string => {
  // if superblocks base URL is an EE, return bucketeer's dev URL
  if (!isEmpty(superblocksBaseUrl.match(new RegExp("pr-.*.superblocks.dev")))) {
    return "https://bucketeer.dev.superblocks.com";
  }

  switch (superblocksBaseUrl) {
    case "https://eu.superblocks.com":
      return "https://bucketeer.eu.superblocks.com";
    case "https://staging.superblocks.com":
      return "https://bucketeer.staging.superblocks.com";
    case "https://app.superblocks.com":
    case "https://app.superblockshq.com":
      return "https://bucketeer.superblocks.com";
    case "https://dev.superblocks.com":
      return "https://bucketeer.dev.superblocks.com";
    case "http://localhost:3000":
    default:
      return "http://localhost:8030";
  }
};
