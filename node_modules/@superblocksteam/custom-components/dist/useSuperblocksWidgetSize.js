import { useHooksInternalContext } from "./hooksPlumbing";
/**
 * A React hook that returns the size of the area that is available for the custom component to render in. Calling this
 * hook will cause your custom component to be re-rendered whenever that size changes.
 */
export function useSuperblocksWidgetSize() {
    const { React, ccRenderingContext } = useHooksInternalContext();
    const [widgetSize, setWidgetSize] = React.useState(ccRenderingContext.widgetSizeRef.current);
    // we need to subscribe to changes immediately, so use `useLayoutEffect` to subscribe right after the render phase is finished
    React.useLayoutEffect(() => {
        ccRenderingContext.widgetSizeSubscribers.add(setWidgetSize);
        return () => {
            ccRenderingContext.widgetSizeSubscribers.delete(setWidgetSize);
        };
    }, []);
    return widgetSize;
}
