import { useHooksInternalContext } from "./hooksPlumbing";
/**
 * A React hook that returns a boolean that indicates whether the current custom component depends on any data that is
 * currently being loaded. This can be used to show a loading indicator in your custom component.
 */
export function useSuperblocksIsLoading() {
    const { React, ccRenderingContext } = useHooksInternalContext();
    const [isLoading, setIsLoading] = React.useState(ccRenderingContext.isLoadingRef.current);
    // we need to subscribe to changes immediately, so use `useLayoutEffect` to subscribe right after the render phase is finished
    React.useLayoutEffect(() => {
        ccRenderingContext.isLoadingSubscribers.add(setIsLoading);
        return () => {
            ccRenderingContext.isLoadingSubscribers.delete(setIsLoading);
        };
    }, []);
    return isLoading;
}
