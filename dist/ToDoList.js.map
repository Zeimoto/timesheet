{"version":3,"file":"ToDoList.js","sources":["../components/ToDoList/validation.tsx","../components/ToDoList/component.tsx"],"sourcesContent":["export interface Task {\n  taskName: string;\n  taskStatus: \"todo\" | \"complete\";\n}\n\nexport const validateTasks = (tasks: any) => {\n  return {\n    validatedTasks: tasks as Record<string, Task>,\n    hasError:\n      typeof tasks !== \"object\" ||\n      Array.isArray(tasks) ||\n      Object.values(tasks).some((task: any) => {\n        return (\n          typeof task !== \"object\" ||\n          Array.isArray(task) ||\n          !(\"taskName\" in task) ||\n          !(\"taskStatus\" in task) ||\n          typeof task.taskName !== \"string\" ||\n          typeof task.taskStatus !== \"string\" ||\n          ![\"todo\", \"complete\"].includes(task.taskStatus)\n        );\n      }),\n  };\n};\n\nexport const ErrorComponent: React.FC = () => {\n  return (\n    <div className=\"sb-example-root\">\n      <h3>Invalid Tasks List!</h3>\n      <p>Tasks should be of the format:</p>\n      <pre>\n        {`{\n  \"<task-id>\": {\n    taskName: \"<task-name>\",\n    taskStatus: \"todo\" | \"complete\",\n  },\n...}`}\n      </pre>\n    </div>\n  );\n};\n","import { useCallback, useState } from \"react\";\nimport { useSuperblocksContext } from \"@superblocksteam/custom-components\";\nimport { type Props, type EventTriggers } from \"./types\";\nimport { Task, ErrorComponent, validateTasks } from \"./validation\";\nimport \"./main.scss\";\n\nexport default function Component({ tasks }: Props) {\n  const {\n    updateProperties,\n    events : {\n      onTaskAdded,\n      onTaskStatusChanged,\n    },\n  } = useSuperblocksContext<Props, EventTriggers>();\n  const { validatedTasks, hasError } = validateTasks(tasks ?? {});\n  const [value, setValue] = useState(\"\");\n\n  const onTodoAdded = useCallback(() => {\n    const id = Math.random().toString(36).substring(2, 8);\n    updateProperties({\n      tasks: {\n        ...validatedTasks,\n        [id]: {\n          taskName: value,\n          taskStatus: \"todo\",\n        },\n      },\n    });\n    onTaskAdded();\n  }, [updateProperties, validatedTasks, value, onTaskAdded]);\n\n  const onTaskStatusChange = useCallback(\n    (id: string, status: boolean) => {\n      updateProperties({\n        tasks: {\n          ...validatedTasks,\n          [id]: {\n            ...tasks[id],\n            taskStatus: status ? \"complete\" : \"todo\",\n          },\n        },\n      });\n      onTaskStatusChanged();\n    },\n    [updateProperties, validatedTasks, tasks, onTaskStatusChanged]\n  );\n\n  return hasError ? (\n    <ErrorComponent />\n  ) : (\n    <div className=\"sb-example-root\">\n      <h2>Todo List</h2>\n      <div className=\"horizontal-layout\">\n        <input\n          type=\"text\"\n          value={value}\n          className=\"fill\"\n          placeholder=\"Add a new item\"\n          onChange={(e) => setValue(e.target.value)}\n          // Prevents the event from bubbling up to the parent (i.e. prevent arrow keys from moving custom component in Superblocks editor)\n          onKeyDown={(e) => e.stopPropagation()}\n        />\n        <button onClick={onTodoAdded}>Add Todo</button>\n      </div>\n      <div className=\"checkboxes\">\n        {Object.entries(validatedTasks).map(\n          ([id, task]: [string, Task], idx) => (\n            <div key={idx} className=\"horizontal-layout\">\n              <input\n                type=\"checkbox\"\n                checked={task.taskStatus === \"complete\"}\n                onChange={(e) => onTaskStatusChange(id, e.target.checked)}\n              />\n              <p>\n                <span\n                  className={\n                    task.taskStatus === \"complete\" ? \"is-complete\" : \"\"\n                  }\n                >\n                  {task.taskName}\n                </span>\n              </p>\n            </div>\n          )\n        )}\n      </div>\n    </div>\n  );\n}\n"],"names":["jsxRuntimeExports","reactExports","useSuperblocksContext","validateTasks","tasks","task","jsx","ErrorComponent","Component","updateProperties","onTaskAdded","onTaskStatusChanged","hasError","setValue","onTodoAdded","validatedTasks","id","value","onTaskStatusChange","status","jsxs","e","idx"],"mappings":"AAME,OAAO,KAAAA,EAAA,KAAAC,MAAA,mCAAA,OACL,KAAAC,MAAgB,qOAFP,GAAA,EAOL,MAAAC,EACSC,IAQV,CACL,eAAAA,EACF,SAAA,OAAAA,GAAA,UAAA,MAAA,QAAAA,CAAA,GAAA,OAAA,OAAAA,CAAA,EAAA,KAAAC,GAEa,UAAiC,UAAA,MAAA,QAAAA,CAAA,GAAA,EAAA,aAAAA,IAAA,EAAA,eAAAA,IAAA,OAAAA,EAAA,UAAA,UAAA,OAAAA,EAAA,YAAA,UAAA,CAAA,CAAA,OAAA,UAAA,EAAA,SAAAA,EAAA,UAAA,CAE1C,CACEC,GACiCC,MAE9BP,EAAA,KAAA,MAAA,CAAA,UAAA,kBAAA,SAAA,CAAAA,EAAA,IAAA,KAAA,CAAA,SAAA,qBAAA,CAAA,EAAAA,EAAA,IAAA,IAAA,CAAA,SAAA,gCAAA,CAAA,EAAAA,EAAA,IAAA,MAAA,CAAA,SAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WCtBI,SACPQ,EAAA,CAAA,MAAAJ,CAAA,EAAA,CAAA,KACA,CACF,iBAAAK,SAC8C,CAC1C,YAAAC,EACN,oBAAAC,CAEM,CACJ,IAAuB,oBACN,SAAAC,CAAA,EAAAT,EAAAC,GAAA,CAAA,CAAA,KACRS,CAAA,EAAAZ,EAAA,SAAA,EAAA,EACLa,EAAGb,EAAA,YAAA,IAAA,CACH,QAAM,KAAA,OAAA,EAAA,SAAA,EAAA,EAAA,UAAA,EAAA,CAAA,EACJQ,EAAU,CACV,MAAA,CACF,GAAAM,EACF,CAAAC,CAAA,EAAA,CACD,SAAAC,EACW,WAAA,MACV,CAEJ,CACE,CAAC,EACCP,GAAiB,EAAA,CAAAD,EACRM,EAAAE,EAAAP,CAAA,CAAA,EAAAQ,EACFjB,EAAA,YACH,CAAAe,EAAAG,IAAM,CAAAV,EACO,CAAA,OAEb,GAAAM,EACF,CAAAC,CAAA,EAAA,CACD,GAAAZ,EAAAY,CAAA,EACmB,WAAAG,EAAA,WAAA,MACtB,EAEF,CAAA,EAEAR,EACGL,CAGCA,EACAc,CAAAA,EAAAA,EAAAA,EAACT,CAAc,CACb,EAAA,OAACC,EAAAZ,EAAA,IAAAO,EAAA,CAAA,CAAA,EAAAP,EAAA,KAAA,MAAA,CAAA,UAAA,kBAAA,SAAA,CAAAA,EAAA,IAAA,KAAA,CAAA,SAAA,WAAA,CAAA,EACMA,EAAA,KAAA,MAAA,CAAA,UAAA,oBAAA,SAAA,CACLA,EAAA,IACA,QACA,CACA,YAEA,MAAAiB,EAAoC,UAAA,OACtC,YAAA,iBAAA,SAAAI,GACCR,EAAAQ,EAAA,OAAA,KAAA,EACH,UAAAA,GAAAA,EAAA,gBAAA,CAAA,CAGI,EAEIrB,EAAA,IAAA,SAAA,CAAA,QAAAc,EAAA,SAAA,UAAA,CAAA,CAAA,CAAA,CAAA,EAACd,EAAA,IAAA,MAAA,CAAA,UAAA,aAAA,SAAA,OAAA,QAAAe,CAAA,EAAA,IACC,CAAA,CAAAC,EAAAX,CAAK,EAAAiB,IAAAtB,EAAA,KAAA,MAAA,CAAA,UAAA,oBAAA,SAAA,CACIA,EAAoB,IAAA,QAC2B,CAC1D,KAAA,WAAA,QAAAK,0BAEG,SAAAgB,GAAAH,EAAAF,EAAAK,EAAA,OAAA,OAAA,CAAA,CACC,EAIMrB,EAAA,IAAA,IAAA,CAAA,SAAAA,EAAA,IAAA,QAZF,UAeVK,EAAA,aAAA,WAAA,cAAA,GAGN,SAAAA,EAAA,QACF,CAEJ,CAAA,CAAA"}